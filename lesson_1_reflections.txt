I learned that using a Diff function accelarates trouble shooting of code between two different versions of a file.  It helps the user quickly identify what has changed so they can scrutinize the areas the contain the change.  Once you have the right location and place of the file, a user can then investigate the particulars of the code to identify the errors.  Or, a developer or user can view the changes to figure our why a program is behaving in a way that is expected or unexpected.  
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?  It allows a programmer parse or sift through different states of the file to allow for recall or restoration of a desired past copy of the file.  This activity supports development efforts of a programmer by giving them the option to restore past versions, for whatever reason that is desired.  This ability could save time in the development cycle, versus having to recreate a file from scratch, or guess on the changes that have occured with the file.  
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs Does?  The pro side of manually creating a commit is that is gives the user more control on where the save points for different versions occur.  The negative side is that this is dependent on the user, so if they forget, then the save doesn't exist.  The pro side of the automatic save is that it happens in the background and a user doesn't need to think about it.  However, this could lead to different versions that don't necessarily help a user trouble shoot programs during the development process.  
Wyd do you think some version control systems, lik Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?  Saving or committing multiple files at once is conducive to the development world, where Google Docs is targeted to a user who is utilzing an application.  
How can you use the commands git log and git diff to view the history of files?  The command git log allows for viewing of all of the commits that have occurred in a repository.  The git diff command allows a user to view the differences between commits.  
How might using version control make you more confident to make changes that could break something?  Version control provides the freedom to code aggresively and look for elegant approaches to improve the program, as it provides a safety net to go back to if the effort does not pan out.  
Now that you have your workspace set up, what do you want to try using Git for?  I will continue to use it as a collaboration tool to organize my coding work.  
